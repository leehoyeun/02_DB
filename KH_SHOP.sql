ALTER SESSION SET "_ORACLE_SCRIPT" =TRUE;

CREATE USER KH_SHOP IDENTIFIED BY 1234;

GRANT CREATE SESSION TO KH_SHOP;--접속권한 부여
GRANT CREATE TABLE TO KH_SHOP; --테이블 생성권한 부여
ALTER USER KH_SHOP DEFAULT TABLESPACE SYSTEM QUOTA UNLIMITED ON SYSTEM;
--테이블 
GRANT CONNECT , RESOURCE TO KH_SHOP;

COMMIT;
--1
CREATE TABLE CATEGORIES(
CATEGORY_ID NUMBER PRIMARY KEY,
CATEGORY_NAME VARCHAR2(100)UNIQUE
);
COMMENT ON COLUMN CATEGORIES.CATEGORY_ID IS '카테고리 ID';
COMMENT ON COLUMN CATEGORIES.CATEGORY_NAME IS '카테고리 이름';

SELECT * FROM CATEGORIES;
INSERT INTO CATEGORIES(CATEGORY_ID,CATEGORY_NAME) VALUES (1,'스마트폰');
INSERT INTO CATEGORIES(CATEGORY_ID,CATEGORY_NAME) VALUES (2,'TV');
INSERT INTO CATEGORIES(CATEGORY_ID,CATEGORY_NAME) VALUES (3,'Gaming');


--2
CREATE TABLE PRODUCTS(
PRODUCT_ID NUMBER PRIMARY KEY,
PRODUCT_NAME VARCHAR2(100) NOT NULL,
CATEGORY NUMBER, 
PRICE NUMBER DEFAULT 0 ,
STOCK_QUANTITY NUMBER DEFAULT 0 ,
--CONSTRAINT FK_CATEGORIES REFERENCES CATEGORY_ID
CONSTRAINT CATEGORY FOREIGN KEY (CATEGORY) REFERENCES CATEGORIES(CATEGORY_ID)
);

COMMENT ON COLUMN PRODUCTS.PRODUCT_ID IS '상품 코드' ;
COMMENT ON COLUMN PRODUCTS.PRODUCT_NAME IS '상품 이름' ;
COMMENT ON COLUMN PRODUCTS.CATEGORY IS '카테고리  ';
COMMENT ON COLUMN PRODUCTS.PRICE IS '가격 ';
COMMENT ON COLUMN PRODUCTS.STOCK_QUANTITY IS '재고량 ' ;
SELECT * FROM PRODUCTS;
INSERT INTO PRODUCTS (PRODUCT_ID ,PRODUCT_NAME,CATEGORY,PRICE,STOCK_QUANTITY) VALUES (101,'apple iphone 12',1,1500000,30);
INSERT INTO PRODUCTS (PRODUCT_ID ,PRODUCT_NAME,CATEGORY,PRICE,STOCK_QUANTITY) VALUES (102,'Samsung GalaxyS24',1,1800000,50);
INSERT INTO PRODUCTS (PRODUCT_ID ,PRODUCT_NAME,CATEGORY,PRICE,STOCK_QUANTITY) VALUES (201,'LG OLED TV',2,3600000,10);
INSERT INTO PRODUCTS (PRODUCT_ID ,PRODUCT_NAME,CATEGORY,PRICE,STOCK_QUANTITY) VALUES (301,'Sony play Station5',3,700000,15);


SELECT * FROM PRODUCTS;
--3
CREATE TABLE CUSTOMERS(
CUSTOMER_ID NUMBER PRIMARY KEY,
NAME VARCHAR2(20)NOT NULL,
GENDER CHAR(3)  CHECK (GENDER IN('남','여')),
ADDRESS VARCHAR2(100),
PHONE VARCHAR2(30)
);

COMMENT ON COLUMN CUSTOMERS.CUSTOMER_ID IS '고객아이디';
COMMENT ON COLUMN CUSTOMERS.NAME IS '이름';
COMMENT ON COLUMN CUSTOMERS.GENDER IS '성별';
COMMENT ON COLUMN CUSTOMERS.ADDRESS IS '주소';
COMMENT ON COLUMN CUSTOMERS.PHONE IS '전화번호';

INSERT INTO CUSTOMERS (CUSTOMER_ID,NAME,GENDER,ADDRESS,PHONE) VALUES (1,'홍길동','남','서울시 성동구 왕십리','010-1111-2222') ;
INSERT INTO CUSTOMERS (CUSTOMER_ID,NAME,GENDER,ADDRESS,PHONE) VALUES (2,'유관순','여','서울시 종로구 안국동','010-3333-1111') ;
SELECT * FROM CUSTOMERS;

COMMIT;
ROLLBACK;
--4
CREATE TABLE ORDERS(
ORDER_ID NUMBER PRIMARY KEY,
ORDER_DATE DATE DEFAULT SYSDATE,
STATUS CHAR(1) DEFAULT 'N' CONSTRAINT STATUS_CHECK CHECK (STATUS IN ('Y','N')  ),
CUSTOMER_ID NUMBER
CONSTRAINT CUSTOMER_ID_FK2 REFERENCES CUSTOMERS(CUSTOMER_ID)
ON DELETE CASCADE
);

SELECT * FROM ORDERS;

COMMENT ON COLUMN ORDERS.ORDER_ID IS '주문번호';
COMMENT ON COLUMN ORDERS.ORDER_DATE IS '주문일';
COMMENT ON COLUMN ORDERS.STATUS IS '처리상태';
COMMENT ON COLUMN ORDERS.CUSTOMER_ID IS '고객 ID';

INSERT INTO ORDERS(ORDER_ID,ORDER_DATE,STATUS,CUSTOMER_ID)VALUES(576,'2024-02-29','N',1);
INSERT INTO ORDERS(ORDER_ID,ORDER_DATE,STATUS,CUSTOMER_ID)VALUES(978,'2024-03-11','Y',2);
INSERT INTO ORDERS(ORDER_ID,ORDER_DATE,STATUS,CUSTOMER_ID)VALUES(777,'2024-03-11','N',2);
INSERT INTO ORDERS(ORDER_ID,ORDER_DATE,STATUS,CUSTOMER_ID)VALUES(134,'2022-12-25','Y',1);
INSERT INTO ORDERS(ORDER_ID,ORDER_DATE,STATUS,CUSTOMER_ID)VALUES(499,'2020-01-03','Y',1);

SELECT * FROM ORDERS;

--5
CREATE TABLE ORDER_DETAILS(
ORDER_DETAIL_ID NUMBER PRIMARY KEY,
ORDER_ID NUMBER CONSTRAINT ORDER_ID_FK REFERENCES ORDERS(ORDER_ID) ON DELETE CASCADE,
PRODUCT_ID NUMBER CONSTRAINT PRODUCT_ID_FK REFERENCES PRODUCTS(PRODUCT_ID)ON DELETE SET NULL,
QUANTITY NUMBER,
PRICE_PER_UNIT NUMBER
);

COMMENT ON COLUMN ORDER_DETAILS.ORDER_DETAIL_ID IS '주문 상세 ID';
COMMENT ON COLUMN ORDER_DETAILS.ORDER_ID IS '주문번호';
COMMENT ON COLUMN ORDER_DETAILS.PRODUCT_ID IS '상품코드';
COMMENT ON COLUMN ORDER_DETAILS.QUANTITY IS '수량';
COMMENT ON COLUMN ORDER_DETAILS.PRICE_PER_UNIT IS '가격';

INSERT INTO ORDER_DETAILS (ORDER_DETAIL_ID,ORDER_ID,PRODUCT_ID,QUANTITY,PRICE_PER_UNIT) VALUES (111,576,101,1,1500000);
INSERT INTO ORDER_DETAILS (ORDER_DETAIL_ID,ORDER_ID,PRODUCT_ID,QUANTITY,PRICE_PER_UNIT) VALUES (222,978,201,2,3600000);
INSERT INTO ORDER_DETAILS (ORDER_DETAIL_ID,ORDER_ID,PRODUCT_ID,QUANTITY,PRICE_PER_UNIT) VALUES (333,978,102,1,1800000);
INSERT INTO ORDER_DETAILS (ORDER_DETAIL_ID,ORDER_ID,PRODUCT_ID,QUANTITY,PRICE_PER_UNIT) VALUES (444,777,301,5,700000);
INSERT INTO ORDER_DETAILS (ORDER_DETAIL_ID,ORDER_ID,PRODUCT_ID,QUANTITY,PRICE_PER_UNIT) VALUES (555,134,102,1,1800000);
INSERT INTO ORDER_DETAILS (ORDER_DETAIL_ID,ORDER_ID,PRODUCT_ID,QUANTITY,PRICE_PER_UNIT) VALUES (666,499,201,3,3600000);

SELECT * FROM ORDER_DETAILS;

SELECT NAME,ORDER_DATE,STATUS
FROM CUSTOMERS
JOIN ORDERS USING (CUSTOMER_ID)
WHERE STATUS = 'N';

SELECT ORDER_ID,ORDER_DATE,STATUS
FROM CUSTOMERS
JOIN ORDERS USING (CUSTOMER_ID)
WHERE NAME = '홍길동'
AND ORDERS.ORDER_DATE BETWEEN '20240101' AND '20241231';

--유관순 고객이 지금껏 주문한 상품의 수량 별 금액을 조회하려고 한다.
--주문번호, 상품명, 수량, 개별금액, 주문별금액을 조회하시오

SELECT ORDER_ID ,PRODUCT_NAME ,QUANTITY,PRICE,PRICE_PER_UNIT
FROM CUSTOMERS
JOIN ORDERS USING (CUSTOMER_ID)
FULL JOIN ORDER_DETAILS
FULL JOIN PRODUCTS ON ORDER_DETAILS.QUANTITY = PRODUCTS.PRODUCT_ID 
FULL JOIN CATEGORIES ON GATEGORY = GATEGORY_ID
WHERE NAME = '유관순';

SELECT * FROM CUSTOMERS;
SELECT * FROM ORDERS;
SELECT * FROM ORDER_DETAILS;
SELECT * FROM PRODUCTS;
SELECT * FROM CATEGORIES;




SELECT ORDER_ID AS 주문번호, PRODUCT_NAME AS 상품명, QUANTITY AS 수량, PRICE_PER_UNIT AS 개별금액, QUANTITY * PRICE_PER_UNIT AS 주문별금액합계
FROM CUSTOMERS
JOIN ORDERS USING(CUSTOMER_ID)
JOIN ORDER_DETAILS USING(ORDER_ID)
JOIN PRODUCTS USING(PRODUCT_ID)
WHERE NAME = '유관순'
ORDER BY ORDER_ID;



